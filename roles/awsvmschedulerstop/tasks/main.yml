---
# Set operator status
- name: Update operator status
  include_tasks: update-operator-status.yaml
  vars:
    reasontext: CheckIfAWSCredSecretPresent
    messagetext: "{{aws_cred_secret_check_msg}}"

# Get the aws cred secret
- name: Get secret
  k8s_info:
    api_version: v1
    kind: Secret
    namespace: "{{ansible_operator_meta.namespace}}"
    name: "{{aws_secret_name}}"
  register: var_secret

- name: Extract secret name
  set_fact:
    secret: "{{ var_secret | json_query('resources[0].metadata.name')  }}"

- name: Print secret name
  debug:
    msg: "AWS credentials are present in secret {{secret}}"

# Update operator status if aws cred secret is not present
- block:

  - name: Update operator status
    include_tasks: update-operator-status.yaml
    vars:
      reasontext: CheckIfAWSCredSecretPresent
      messagetext: "{{aws_cred_secret_not_present_msg}}"

  - name: Fail task if aws cred secret is not present
    fail:
      msg: "{{aws_cred_secret_not_present_msg}}"

  when: secret != aws_secret_name

# Create cronjob if secret is present
- block:

  - name: Update operator status
    include_tasks: update-operator-status.yaml
    vars:
      reasontext: CheckIfAWSCredSecretPresent
      messagetext: "{{aws_cred_secret_present_msg}}"

  - name: Update operator status
    include_tasks: update-operator-status.yaml
    vars:
      reasontext: CreatingCronJob
      messagetext: "{{creating_cronjob_msg}}"

  - name: Create cronjob
    kubernetes.core.k8s:
      definition: "{{ lookup('template', item) | from_yaml  }}"
    with_items:
      - cronjob.yaml.j2

  - name: Get cronjob
    k8s_info:
      api_version: batch/v1
      kind: CronJob
      namespace: "{{ansible_operator_meta.namespace}}"
      name: "{{ansible_operator_meta.name}}"
    register: var_cronjob

  - name: Extract cronjob name
    set_fact:
      cronjob_name: "{{ var_cronjob | json_query('resources[0].metadata.name')  }}"

  - name: Update operator status
    include_tasks: update-operator-status.yaml
    vars:
      reasontext: CreateCronJobSuccess
      messagetext: "{{create_cronjob_success_msg}}"
    when: cronjob_name == ansible_operator_meta.name 

  - name: Update operator status
    include_tasks: update-operator-status.yaml
    vars:
      reasontext: CreateCronJobFailure
      messagetext: "{{create_cronjob_failure_msg}}"
    when: cronjob_name != ansible_operator_meta.name 

  when: secret == aws_secret_name
